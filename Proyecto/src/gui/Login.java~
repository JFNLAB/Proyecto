/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import clases.Base;
import clases.Reloj;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.InputMap;
import javax.swing.JLabel;
import javax.swing.KeyStroke;
import java.awt.Color;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.Font;
import javax.swing.JFrame;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author feli
 */
public class Login extends javax.swing.JFrame implements Runnable, WindowListener{

    private Base db;
    Thread timer = null;

    String dateToDisplay;

    /**
     * Creates new form Login
     */
    public Login(Base db) {
        initComponents();
        this.db = db;
        this.btnVerificar.setFocusPainted(true);
        InputMap map = new InputMap();
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false), "pressed");
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true), "released");
        btnVerificar.setInputMap(0, map);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txbVerificar = new javax.swing.JTextField();
        btnVerificar = new javax.swing.JButton();
        btnatras = new javax.swing.JButton();
        lblHoraActual = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Log in");

        btnVerificar.setText("Verificar");
        btnVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerificarActionPerformed(evt);
            }
        });
        btnVerificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVerificarKeyPressed(evt);
            }
        });

        btnatras.setText("Atr√°s");
        btnatras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnatrasActionPerformed(evt);
            }
        });

        lblHoraActual.setText("Hora Actual: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txbVerificar, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblHoraActual, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(149, 149, 149)
                                    .addComponent(btnVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(btnatras))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txbVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnVerificar)
                .addGap(31, 31, 31)
                .addComponent(lblHoraActual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(btnatras)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerificarActionPerformed
        // TODO add your handling code here:
        String Numero_a_verificar = txbVerificar.getText();
        String empleadoLog = this.db.entrar(Numero_a_verificar)[0];
        String empleado_tiempo = this.db.entrar(Numero_a_verificar)[1];
        if (empleadoLog == (null)) {
            JOptionPane.showMessageDialog(this, "No hay empleados cargados", "Empleado", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, empleadoLog, "Empleado", JOptionPane.INFORMATION_MESSAGE);
            if (empleado_tiempo == (null)) {

            } else {
                JOptionPane.showMessageDialog(this, empleado_tiempo, "Horario", JOptionPane.INFORMATION_MESSAGE);
            }
        }

        
    }//GEN-LAST:event_btnVerificarActionPerformed

    private void btnVerificarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVerificarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerificarKeyPressed

    private void btnatrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnatrasActionPerformed
        dispose();
    }//GEN-LAST:event_btnatrasActionPerformed

    /**
     * @param args the command line arguments
     */
    
     
    	 
     
    	int hr; 
    	Date d; 
    	JLabel lblHoraActual=new JLabel();	 
    	int hour; 
    	 int minute; 
    	 int second; 
    	 String amPm="AM"; 
     
    	public void reloj() {
    		Reloj clock=new Reloj(); 
    		clock.setBounds(260,185,120,60);
           
    		clock.setVisible(true); 
    		 try { 
    		        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()); 
     
    		 } 
    		 catch (ClassNotFoundException e) { 
     
    		    } catch (InstantiationException e) { 
     
    		    } catch (IllegalAccessException e) { 
     
    		    } catch (UnsupportedLookAndFeelException e) { 
     
    		    } 
    		clock.setResizable(false); 
    		 clock.start(); 
     
     
    	} 
     
    	private void start() { 
    		 if(timer == null) 
    	    { 
    	      timer = new Thread(this); 
    	      timer.start(); 
    	    } 
    	} 
     
    	public void stop() 
    	{ 
    	  timer = null; 
    	} 
     
    	{ 
     
    		this.setLayout(new FlowLayout()); 
     
    		lblHoraActual.setForeground(Color.BLACK); 
    		lblHoraActual.setFont(new Font("Anklepants",Font.PLAIN,16)); 
     
    		 this.add(lblHoraActual); 
    		 this.setTitle("Reloj "); 
    		this.pack(); 
    	        	this.setLocationRelativeTo(null); 
     
    	} 
    	public String getFormatedDate(Date d) 
    	{ 
    	String formatedDate=" "; 
    	 hour = d.getHours(); 
    	 minute = d.getMinutes(); 
    	 second = d.getSeconds(); 
    	 amPm=(hour<12)?"AM":"PM"; 
    	 hr=(hour>12)?hour-12:hour; 
     
    	formatedDate=formatedDate.concat(padElement(hr, '0')); 
    	formatedDate=formatedDate.concat(":"); 
    	formatedDate=formatedDate.concat(padElement(minute, '0')); 
    	formatedDate=formatedDate.concat(":"); 
    	formatedDate=formatedDate.concat(padElement(second, '0')); 
    	formatedDate=formatedDate.concat(" "+ amPm); 
    	return formatedDate;  
    	} 
     
    	private String padElement(int expr, char padChar) 
    	{ 
    	  String result = "";  
    	  if (expr < 10) result = result.concat(String.valueOf(padChar)); 
    	  result = result.concat(String.valueOf(expr)); 
    	  return(result); 
    	} 
     
     
    	public void run() { 
    		 // Sleep in the timer thread... 
    		  while (timer != null) { 
    		    try {timer.sleep(100);} 
    		catch (InterruptedException e){} 
    		d=new  Date(); 
    		dateToDisplay=getFormatedDate(d); 
    		 lblHoraActual.setText(dateToDisplay); 
    		} 
    		timer = null; 
     
    	} 
     
     
    	public void windowActivated(WindowEvent arg0) { 
    		// TODO Auto-generated method stub 
     
    	} 
     
    	 public void windowClosed(WindowEvent arg0) { 
    	 } 
    	public void windowClosing(WindowEvent arg0) { 
    		stop(); 
    		dispose(); 
    		System.exit(0); 
     
    	} 
    	public void windowDeactivated(WindowEvent arg0) { 
    	} 
    	public void windowDeiconified(WindowEvent arg0) { 
    	} 
    	public void windowIconified(WindowEvent arg0) { 
    	} 
    	public void windowOpened(WindowEvent arg0) { 
    	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerificar;
    private javax.swing.JButton btnatras;
    private javax.swing.JLabel lblHoraActual;
    private javax.swing.JTextField txbVerificar;
    // End of variables declaration//GEN-END:variables
}
